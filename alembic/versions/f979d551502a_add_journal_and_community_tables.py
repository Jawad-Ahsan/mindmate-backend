"""add_journal_and_community_tables

Revision ID: f979d551502a
Revises: 12813cbbd1ec
Create Date: 2025-08-19 19:28:56.780338

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f979d551502a'
down_revision: Union[str, None] = '12813cbbd1ec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('community_posts',
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_posts_author_id'), 'community_posts', ['author_id'], unique=False)
    op.create_index(op.f('ix_community_posts_comments_count'), 'community_posts', ['comments_count'], unique=False)
    op.create_index(op.f('ix_community_posts_is_active'), 'community_posts', ['is_active'], unique=False)
    op.create_index(op.f('ix_community_posts_is_featured'), 'community_posts', ['is_featured'], unique=False)
    op.create_index(op.f('ix_community_posts_likes_count'), 'community_posts', ['likes_count'], unique=False)
    op.create_index(op.f('ix_community_posts_posted_at'), 'community_posts', ['posted_at'], unique=False)
    op.create_table('journal_entries',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.String(length=500), nullable=True),
    sa.Column('entry_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_journal_entries_entry_date'), 'journal_entries', ['entry_date'], unique=False)
    op.create_index(op.f('ix_journal_entries_is_archived'), 'journal_entries', ['is_archived'], unique=False)
    op.create_index(op.f('ix_journal_entries_patient_id'), 'journal_entries', ['patient_id'], unique=False)
    op.create_table('community_post_comments',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('commented_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['patients.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['community_posts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_post_comments_author_id'), 'community_post_comments', ['author_id'], unique=False)
    op.create_index(op.f('ix_community_post_comments_commented_at'), 'community_post_comments', ['commented_at'], unique=False)
    op.create_index(op.f('ix_community_post_comments_is_active'), 'community_post_comments', ['is_active'], unique=False)
    op.create_index(op.f('ix_community_post_comments_post_id'), 'community_post_comments', ['post_id'], unique=False)
    op.create_table('community_post_likes',
    sa.Column('post_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('liked_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['community_posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('post_id', 'user_id', name='unique_post_like')
    )
    op.create_index(op.f('ix_community_post_likes_post_id'), 'community_post_likes', ['post_id'], unique=False)
    op.create_index(op.f('ix_community_post_likes_user_id'), 'community_post_likes', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_community_post_likes_user_id'), table_name='community_post_likes')
    op.drop_index(op.f('ix_community_post_likes_post_id'), table_name='community_post_likes')
    op.drop_table('community_post_likes')
    op.drop_index(op.f('ix_community_post_comments_post_id'), table_name='community_post_comments')
    op.drop_index(op.f('ix_community_post_comments_is_active'), table_name='community_post_comments')
    op.drop_index(op.f('ix_community_post_comments_commented_at'), table_name='community_post_comments')
    op.drop_index(op.f('ix_community_post_comments_author_id'), table_name='community_post_comments')
    op.drop_table('community_post_comments')
    op.drop_index(op.f('ix_journal_entries_patient_id'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_is_archived'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_entry_date'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_community_posts_posted_at'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_likes_count'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_is_featured'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_is_active'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_comments_count'), table_name='community_posts')
    op.drop_index(op.f('ix_community_posts_author_id'), table_name='community_posts')
    op.drop_table('community_posts')
    # ### end Alembic commands ###

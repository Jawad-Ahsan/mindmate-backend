"""add questionnaire tables

Revision ID: 1893b77224a3
Revises: 54f1bdb36107
Create Date: 2025-08-19 13:25:18.124931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1893b77224a3'
down_revision: Union[str, None] = '54f1bdb36107'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('SUPER_ADMIN', 'ADMIN', name='adminroleenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', name='adminstatusenum'), nullable=False),
    sa.Column('security_key', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='uq_admin_email')
    )
    op.create_index('idx_admin_active', 'admins', ['is_active'], unique=False)
    op.create_index('idx_admin_email', 'admins', ['email'], unique=False)
    op.create_index('idx_admin_role', 'admins', ['role'], unique=False)
    op.create_index('idx_admin_status', 'admins', ['status'], unique=False)
    op.create_table('forums',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('ANXIETY', 'DEPRESSION', 'STRESS', 'RELATIONSHIPS', 'ADDICTION', 'TRAUMA', 'GENERAL', 'OTHER', name='questioncategory'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_moderated', sa.Boolean(), nullable=True),
    sa.Column('allow_anonymous', sa.Boolean(), nullable=True),
    sa.Column('max_questions_per_day', sa.Integer(), nullable=True),
    sa.Column('max_answers_per_question', sa.Integer(), nullable=True),
    sa.Column('total_questions', sa.Integer(), nullable=True),
    sa.Column('total_answers', sa.Integer(), nullable=True),
    sa.Column('active_participants', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_forum_active', 'forums', ['is_active'], unique=False)
    op.create_index('idx_forum_category', 'forums', ['category'], unique=False)
    op.create_index('idx_forum_name', 'forums', ['name'], unique=False)
    op.create_index(op.f('ix_forums_category'), 'forums', ['category'], unique=False)
    op.create_index(op.f('ix_forums_is_active'), 'forums', ['is_active'], unique=False)
    op.create_index(op.f('ix_forums_name'), 'forums', ['name'], unique=False)
    op.create_table('patients',
    sa.Column('user_type', sa.Enum('ADMIN', 'PATIENT', 'SPECIALIST', name='usertype'), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'PREFER_NOT_TO_SAY', 'OTHER', name='genderenum'), nullable=False),
    sa.Column('primary_language', sa.Enum('ENGLISH', 'URDU', 'PUNJABI', 'SINDHI', 'PASHTO', name='languageenum'), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('district', sa.String(length=100), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('record_status', sa.Enum('ACTIVE', 'INACTIVE', 'ARCHIVED', 'TRANSFERRED', name='recordstatusenum'), nullable=True),
    sa.Column('assigned_therapist_id', sa.String(length=100), nullable=True),
    sa.Column('intake_completed_date', sa.Date(), nullable=True),
    sa.Column('last_contact_date', sa.Date(), nullable=True),
    sa.Column('next_appointment_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('accepts_terms_and_conditions', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='uq_patient_email')
    )
    op.create_index('idx_patient_deleted', 'patients', ['is_deleted'], unique=False)
    op.create_index('idx_patient_dob', 'patients', ['date_of_birth'], unique=False)
    op.create_index('idx_patient_email', 'patients', ['email'], unique=False)
    op.create_index('idx_patient_name', 'patients', ['last_name', 'first_name'], unique=False)
    op.create_index('idx_patient_phone', 'patients', ['phone'], unique=False)
    op.create_index('idx_patient_status', 'patients', ['record_status'], unique=False)
    op.create_index('idx_patient_therapist', 'patients', ['assigned_therapist_id'], unique=False)
    op.create_index('idx_patient_user_type', 'patients', ['user_type'], unique=False)
    op.create_index(op.f('ix_patients_city'), 'patients', ['city'], unique=False)
    op.create_table('specialists',
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(timezone=True), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'PREFER_NOT_TO_SAY', 'OTHER', name='genderenum'), nullable=False),
    sa.Column('specialist_type', sa.Enum('PSYCHIATRIST', 'PSYCHOLOGIST', 'COUNSELOR', 'THERAPIST', 'SOCIAL_WORKER', name='specialisttypeenum'), nullable=False),
    sa.Column('years_experience', sa.Integer(), nullable=False),
    sa.Column('accepts_terms_and_conditions', sa.Boolean(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('clinic_name', sa.String(length=200), nullable=True),
    sa.Column('consultation_fee', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('languages_spoken', sa.JSON(), nullable=True, comment='Array of language codes'),
    sa.Column('availability_status', sa.Enum('ACCEPTING_NEW_PATIENTS', 'WAITLIST_ONLY', 'NOT_ACCEPTING', 'TEMPORARILY_UNAVAILABLE', name='availabilitystatusenum'), nullable=False),
    sa.Column('approval_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'SUSPENDED', 'UNDER_REVIEW', name='approvalstatusenum'), nullable=False),
    sa.Column('average_rating', sa.Numeric(precision=3, scale=2), nullable=False),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('total_appointments', sa.Integer(), nullable=False),
    sa.Column('profile_image_url', sa.String(length=500), nullable=True),
    sa.Column('website_url', sa.String(length=500), nullable=True),
    sa.Column('social_media_links', sa.JSON(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('average_rating >= 0.0 AND average_rating <= 5.0', name='chk_specialists_rating_range'),
    sa.CheckConstraint('consultation_fee >= 0', name='chk_specialists_fee_positive'),
    sa.CheckConstraint('total_appointments >= 0', name='chk_specialists_appointments_positive'),
    sa.CheckConstraint('total_reviews >= 0', name='chk_specialists_reviews_positive'),
    sa.CheckConstraint('years_experience >= 0 AND years_experience <= 60', name='chk_specialists_experience_range'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_specialists_location', 'specialists', ['city', 'specialist_type'], unique=False)
    op.create_index('idx_specialists_name', 'specialists', ['first_name', 'last_name'], unique=False)
    op.create_index('idx_specialists_rating', 'specialists', ['average_rating', 'total_reviews'], unique=False)
    op.create_index('idx_specialists_status', 'specialists', ['approval_status', 'availability_status'], unique=False)
    op.create_index(op.f('ix_specialists_approval_status'), 'specialists', ['approval_status'], unique=False)
    op.create_index(op.f('ix_specialists_availability_status'), 'specialists', ['availability_status'], unique=False)
    op.create_index(op.f('ix_specialists_city'), 'specialists', ['city'], unique=False)
    op.create_index(op.f('ix_specialists_email'), 'specialists', ['email'], unique=True)
    op.create_index(op.f('ix_specialists_first_name'), 'specialists', ['first_name'], unique=False)
    op.create_index(op.f('ix_specialists_last_name'), 'specialists', ['last_name'], unique=False)
    op.create_index(op.f('ix_specialists_specialist_type'), 'specialists', ['specialist_type'], unique=False)
    op.create_table('appointments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('specialist_id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('scheduled_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('scheduled_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('appointment_type', sa.Enum('VIRTUAL', 'IN_PERSON', name='appointmenttypeenum'), nullable=False),
    sa.Column('status', sa.Enum('SCHEDULED', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'NO_SHOW', name='appointmentstatusenum'), nullable=False),
    sa.Column('fee', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_status', sa.Enum('UNPAID', 'PAID', 'REFUNDED', name='paymentstatusenum'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('session_notes', sa.Text(), nullable=True),
    sa.Column('cancellation_reason', sa.String(length=500), nullable=True),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('fee >= 0', name='non_negative_fee'),
    sa.CheckConstraint('scheduled_end > scheduled_start', name='check_end_after_start'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_appointment_date', 'appointments', ['scheduled_start'], unique=False)
    op.create_index('idx_appointment_patient', 'appointments', ['patient_id'], unique=False)
    op.create_index('idx_appointment_payment', 'appointments', ['payment_status'], unique=False)
    op.create_index('idx_appointment_specialist', 'appointments', ['specialist_id'], unique=False)
    op.create_index('idx_appointment_status', 'appointments', ['status'], unique=False)
    op.create_index('idx_appointment_type', 'appointments', ['appointment_type'], unique=False)
    op.create_table('forum_questions',
    sa.Column('forum_id', sa.UUID(), nullable=False),
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('category', sa.Enum('ANXIETY', 'DEPRESSION', 'STRESS', 'RELATIONSHIPS', 'ADDICTION', 'TRAUMA', 'GENERAL', 'OTHER', name='questioncategory'), nullable=True),
    sa.Column('status', sa.Enum('OPEN', 'ANSWERED', 'CLOSED', name='questionstatus'), nullable=True),
    sa.Column('is_anonymous', sa.Boolean(), nullable=True),
    sa.Column('is_urgent', sa.Boolean(), nullable=True),
    sa.Column('answer_count', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('flagged_reason', sa.String(length=200), nullable=True),
    sa.Column('moderated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('moderated_by', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['forum_id'], ['forums.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_forum_question_answered', 'forum_questions', ['status', 'answer_count'], unique=False)
    op.create_index('idx_forum_question_category', 'forum_questions', ['category'], unique=False)
    op.create_index('idx_forum_question_created', 'forum_questions', ['created_at'], unique=False)
    op.create_index('idx_forum_question_forum', 'forum_questions', ['forum_id'], unique=False)
    op.create_index('idx_forum_question_patient', 'forum_questions', ['patient_id'], unique=False)
    op.create_index('idx_forum_question_status', 'forum_questions', ['status'], unique=False)
    op.create_index(op.f('ix_forum_questions_category'), 'forum_questions', ['category'], unique=False)
    op.create_index(op.f('ix_forum_questions_forum_id'), 'forum_questions', ['forum_id'], unique=False)
    op.create_index(op.f('ix_forum_questions_patient_id'), 'forum_questions', ['patient_id'], unique=False)
    op.create_index(op.f('ix_forum_questions_status'), 'forum_questions', ['status'], unique=False)
    op.create_table('mandatory_questionnaires',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=False),
    sa.Column('age', sa.String(length=10), nullable=False),
    sa.Column('gender', sa.String(length=50), nullable=False),
    sa.Column('chief_complaint', sa.String(), nullable=False),
    sa.Column('current_medications', sa.String(), nullable=True),
    sa.Column('past_conditions', sa.String(), nullable=True),
    sa.Column('past_surgeries', sa.String(), nullable=True),
    sa.Column('family_history', sa.String(), nullable=True),
    sa.Column('lifestyle_smoking', sa.String(length=50), nullable=True),
    sa.Column('lifestyle_alcohol', sa.String(length=50), nullable=True),
    sa.Column('lifestyle_activity', sa.String(length=50), nullable=True),
    sa.Column('meta', sa.JSON(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_mandatory_q_patient', 'mandatory_questionnaires', ['patient_id'], unique=False)
    op.create_index('idx_mandatory_q_submitted_at', 'mandatory_questionnaires', ['submitted_at'], unique=False)
    op.create_index(op.f('ix_mandatory_questionnaires_patient_id'), 'mandatory_questionnaires', ['patient_id'], unique=False)
    op.create_table('optional_questionnaires',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_optional_q_patient', 'optional_questionnaires', ['patient_id'], unique=False)
    op.create_index('idx_optional_q_submitted_at', 'optional_questionnaires', ['submitted_at'], unique=False)
    op.create_index(op.f('ix_optional_questionnaires_patient_id'), 'optional_questionnaires', ['patient_id'], unique=False)
    op.create_table('patient_auth_info',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('password_salt', sa.String(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('otp', sa.String(), nullable=True),
    sa.Column('otp_expiry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_token', sa.String(), nullable=True),
    sa.Column('verification_token_expiry', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_attempts', sa.Integer(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('theme_preference', sa.String(length=20), nullable=True),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=True),
    sa.Column('two_factor_code', sa.String(length=6), nullable=True),
    sa.Column('two_factor_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('max_concurrent_sessions', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('google_id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_index('idx_auth_google', 'patient_auth_info', ['google_id'], unique=False)
    op.create_index('idx_auth_patient', 'patient_auth_info', ['patient_id'], unique=False)
    op.create_table('patient_history',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('past_psych_dx', sa.Text(), nullable=True),
    sa.Column('past_psych_treatment', sa.Text(), nullable=True),
    sa.Column('hospitalizations', sa.Text(), nullable=True),
    sa.Column('ect_history', sa.Text(), nullable=True),
    sa.Column('current_meds', sa.JSON(), nullable=False),
    sa.Column('med_allergies', sa.Text(), nullable=True),
    sa.Column('otc_supplements', sa.Text(), nullable=True),
    sa.Column('medication_adherence', sa.Text(), nullable=True),
    sa.Column('medical_history_summary', sa.Text(), nullable=True),
    sa.Column('chronic_illnesses', sa.Text(), nullable=True),
    sa.Column('neurological_problems', sa.Text(), nullable=True),
    sa.Column('head_injury', sa.Text(), nullable=True),
    sa.Column('seizure_history', sa.Text(), nullable=True),
    sa.Column('pregnancy_status', sa.String(length=50), nullable=True),
    sa.Column('alcohol_use', sa.Text(), nullable=True),
    sa.Column('drug_use', sa.Text(), nullable=True),
    sa.Column('prescription_drug_abuse', sa.Text(), nullable=True),
    sa.Column('last_use_date', sa.String(length=100), nullable=True),
    sa.Column('substance_treatment', sa.Text(), nullable=True),
    sa.Column('tobacco_use', sa.Text(), nullable=True),
    sa.Column('cultural_background', sa.Text(), nullable=True),
    sa.Column('cultural_beliefs', sa.Text(), nullable=True),
    sa.Column('spiritual_supports', sa.Text(), nullable=True),
    sa.Column('family_mental_health_stigma', sa.Text(), nullable=True),
    sa.Column('completion_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('sections_completed', sa.JSON(), nullable=False),
    sa.Column('is_complete', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_index('idx_patient_history_complete', 'patient_history', ['is_complete'], unique=False)
    op.create_index('idx_patient_history_patient', 'patient_history', ['patient_id'], unique=False)
    op.create_index('idx_patient_history_timestamp', 'patient_history', ['completion_timestamp'], unique=False)
    op.create_table('patient_preferences',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('location_preferences', sa.JSON(), nullable=False),
    sa.Column('cultural_preferences', sa.JSON(), nullable=False),
    sa.Column('therapy_preferences', sa.JSON(), nullable=False),
    sa.Column('financial_preferences', sa.JSON(), nullable=False),
    sa.Column('specialist_preferences', sa.JSON(), nullable=False),
    sa.Column('availability_preferences', sa.JSON(), nullable=False),
    sa.Column('priority_weights', sa.JSON(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('max_budget', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('preferred_city', sa.String(length=100), nullable=True),
    sa.Column('consultation_mode', sa.Enum('VIRTUAL', 'IN_PERSON', 'HYBRID', name='consultationmodeenum'), nullable=True),
    sa.Column('urgency_level', sa.Enum('EMERGENCY', 'URGENT', 'STANDARD', 'FLEXIBLE', name='urgencylevelenum'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('max_budget >= 0', name='check_max_budget_positive'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('patient_id')
    )
    op.create_index('idx_patient_preferences_active', 'patient_preferences', ['is_active'], unique=False)
    op.create_index('idx_patient_preferences_budget', 'patient_preferences', ['max_budget'], unique=False)
    op.create_index('idx_patient_preferences_city', 'patient_preferences', ['preferred_city'], unique=False)
    op.create_index('idx_patient_preferences_mode', 'patient_preferences', ['consultation_mode'], unique=False)
    op.create_index('idx_patient_preferences_patient', 'patient_preferences', ['patient_id'], unique=False)
    op.create_index('idx_patient_preferences_urgency', 'patient_preferences', ['urgency_level'], unique=False)
    op.create_table('patient_presenting_concerns',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('presenting_concern', sa.Text(), nullable=True),
    sa.Column('presenting_onset', sa.String(length=200), nullable=True),
    sa.Column('hpi_onset', sa.String(length=200), nullable=True),
    sa.Column('hpi_duration', sa.String(length=200), nullable=True),
    sa.Column('hpi_course', sa.Text(), nullable=True),
    sa.Column('hpi_severity', sa.Integer(), nullable=True),
    sa.Column('hpi_frequency', sa.String(length=200), nullable=True),
    sa.Column('hpi_triggers', sa.Text(), nullable=True),
    sa.Column('hpi_impact_work', sa.Text(), nullable=True),
    sa.Column('hpi_impact_relationships', sa.Text(), nullable=True),
    sa.Column('hpi_prior_episodes', sa.Text(), nullable=True),
    sa.Column('function_ADL', sa.Text(), nullable=True),
    sa.Column('social_activities', sa.Text(), nullable=True),
    sa.Column('conversation_complete', sa.Boolean(), nullable=True),
    sa.Column('total_questions_asked', sa.Integer(), nullable=True),
    sa.Column('completion_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('session_notes', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('priority_level', sa.Enum('EMERGENCY', 'URGENT', 'STANDARD', 'FLEXIBLE', name='urgencylevelenum'), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('hpi_severity >= 1 AND hpi_severity <= 10', name='check_severity_range'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_presenting_concerns_active', 'patient_presenting_concerns', ['is_active'], unique=False)
    op.create_index('idx_presenting_concerns_complete', 'patient_presenting_concerns', ['conversation_complete'], unique=False)
    op.create_index('idx_presenting_concerns_patient', 'patient_presenting_concerns', ['patient_id'], unique=False)
    op.create_index('idx_presenting_concerns_priority', 'patient_presenting_concerns', ['priority_level'], unique=False)
    op.create_index('idx_presenting_concerns_timestamp', 'patient_presenting_concerns', ['completion_timestamp'], unique=False)
    op.create_table('patient_risk_assessment',
    sa.Column('patient_id', sa.UUID(), nullable=False),
    sa.Column('suicide_ideation', sa.Boolean(), nullable=True),
    sa.Column('suicide_plan', sa.Text(), nullable=True),
    sa.Column('suicide_intent', sa.Boolean(), nullable=True),
    sa.Column('past_attempts', sa.Text(), nullable=True),
    sa.Column('self_harm_history', sa.Text(), nullable=True),
    sa.Column('homicidal_thoughts', sa.Boolean(), nullable=True),
    sa.Column('access_means', sa.Text(), nullable=True),
    sa.Column('protective_factors', sa.Text(), nullable=True),
    sa.Column('risk_level', sa.Enum('LOW', 'MODERATE', 'HIGH', 'CRITICAL', name='risklevel'), nullable=True),
    sa.Column('risk_value', sa.Numeric(precision=3, scale=2), nullable=True),
    sa.Column('risk_reason', sa.Text(), nullable=True),
    sa.Column('assessment_timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assessed_by', sa.String(length=100), nullable=True),
    sa.Column('assessment_type', sa.String(length=50), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=True),
    sa.Column('requires_immediate_attention', sa.Boolean(), nullable=True),
    sa.Column('safety_plan_created', sa.Boolean(), nullable=True),
    sa.Column('follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('follow_up_timeframe', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('risk_value >= 0.00 AND risk_value <= 1.00', name='check_risk_value_range'),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_risk_assessment_attention', 'patient_risk_assessment', ['requires_immediate_attention'], unique=False)
    op.create_index('idx_risk_assessment_current', 'patient_risk_assessment', ['is_current'], unique=False)
    op.create_index('idx_risk_assessment_level', 'patient_risk_assessment', ['risk_level'], unique=False)
    op.create_index('idx_risk_assessment_patient', 'patient_risk_assessment', ['patient_id'], unique=False)
    op.create_index('idx_risk_assessment_timestamp', 'patient_risk_assessment', ['assessment_timestamp'], unique=False)
    op.create_index('idx_risk_assessment_type', 'patient_risk_assessment', ['assessment_type'], unique=False)
    op.create_table('specialist_specializations',
    sa.Column('specialist_id', sa.UUID(), nullable=False),
    sa.Column('specialization', sa.Enum('ANXIETY_DISORDERS', 'DEPRESSION', 'TRAUMA_PTSD', 'COUPLES_THERAPY', 'FAMILY_THERAPY', 'ADDICTION', 'EATING_DISORDERS', 'ADHD', 'BIPOLAR_DISORDER', 'OCD', 'PERSONALITY_DISORDERS', 'GRIEF_COUNSELING', name='specializationenum'), nullable=False),
    sa.Column('years_of_experience_in_specialization', sa.Integer(), nullable=False),
    sa.Column('certification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_primary_specialization', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('years_of_experience_in_specialization >= 0', name='chk_specialization_experience_positive'),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('specialist_id', 'specialization', name='uq_specialist_specializations')
    )
    op.create_index('idx_specializations_primary', 'specialist_specializations', ['is_primary_specialization'], unique=False)
    op.create_index('idx_specializations_specialist', 'specialist_specializations', ['specialist_id'], unique=False)
    op.create_index('idx_specializations_type', 'specialist_specializations', ['specialization'], unique=False)
    op.create_table('specialists_approval_data',
    sa.Column('specialist_id', sa.UUID(), nullable=False),
    sa.Column('license_number', sa.String(length=100), nullable=True),
    sa.Column('license_issuing_authority', sa.String(length=200), nullable=True),
    sa.Column('license_issue_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('license_expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('highest_degree', sa.String(length=100), nullable=True),
    sa.Column('university_name', sa.String(length=200), nullable=True),
    sa.Column('graduation_year', sa.Integer(), nullable=True),
    sa.Column('professional_memberships', sa.JSON(), nullable=True, comment='Array of professional body memberships'),
    sa.Column('certifications', sa.JSON(), nullable=True, comment='Array of additional certifications'),
    sa.Column('cnic', sa.String(length=15), nullable=True),
    sa.Column('passport_number', sa.String(length=20), nullable=True),
    sa.Column('submission_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approval_notes', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('background_check_status', sa.String(length=20), nullable=False),
    sa.Column('background_check_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('background_check_notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('graduation_year >= 1950 AND graduation_year <= EXTRACT(YEAR FROM NOW())', name='chk_approval_graduation_year_valid'),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnic'),
    sa.UniqueConstraint('specialist_id')
    )
    op.create_index('idx_approval_cnic', 'specialists_approval_data', ['cnic'], unique=False)
    op.create_index('idx_approval_license', 'specialists_approval_data', ['license_number'], unique=False)
    op.create_index('idx_approval_review_status', 'specialists_approval_data', ['reviewed_at'], unique=False)
    op.create_index('idx_approval_submission', 'specialists_approval_data', ['submission_date'], unique=False)
    op.create_index(op.f('ix_specialists_approval_data_license_number'), 'specialists_approval_data', ['license_number'], unique=False)
    op.create_table('specialists_auth_info',
    sa.Column('specialist_id', sa.UUID(), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=True),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_ip', sa.String(length=45), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_verification_status', sa.Enum('PENDING', 'VERIFIED', 'FAILED', 'EXPIRED', name='emailverificationstatusenum'), nullable=False),
    sa.Column('email_verification_token', sa.String(length=255), nullable=True),
    sa.Column('email_verification_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('otp_code', sa.String(length=6), nullable=True),
    sa.Column('otp_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('otp_attempts', sa.Integer(), nullable=False),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_type', sa.Enum('ADMIN', 'PATIENT', 'SPECIALIST', name='usertype'), nullable=False),
    sa.Column('two_factor_enabled', sa.Boolean(), nullable=False),
    sa.Column('two_factor_secret', sa.String(length=32), nullable=True),
    sa.Column('two_factor_expires', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('failed_login_attempts >= 0', name='chk_auth_failed_attempts_positive'),
    sa.CheckConstraint('otp_attempts >= 0', name='chk_auth_otp_attempts_positive'),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('specialist_id')
    )
    op.create_index('idx_auth_verification_status', 'specialists_auth_info', ['email_verification_status'], unique=False)
    op.create_index('idx_specialist_auth_last_login', 'specialists_auth_info', ['last_login_at'], unique=False)
    op.create_index(op.f('ix_specialists_auth_info_email_verification_status'), 'specialists_auth_info', ['email_verification_status'], unique=False)
    op.create_table('forum_answers',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('specialist_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'FLAGGED', 'REMOVED', name='answerstatus'), nullable=True),
    sa.Column('is_helpful', sa.Boolean(), nullable=True),
    sa.Column('helpful_count', sa.Integer(), nullable=True),
    sa.Column('is_solution', sa.Boolean(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('flagged_reason', sa.String(length=200), nullable=True),
    sa.Column('moderated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('moderated_by', sa.UUID(), nullable=True),
    sa.Column('specialist_name', sa.String(length=200), nullable=True),
    sa.Column('specialist_type', sa.String(length=50), nullable=True),
    sa.Column('specialist_experience', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['forum_questions.id'], ),
    sa.ForeignKeyConstraint(['specialist_id'], ['specialists.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_forum_answer_created', 'forum_answers', ['created_at'], unique=False)
    op.create_index('idx_forum_answer_helpful', 'forum_answers', ['helpful_count'], unique=False)
    op.create_index('idx_forum_answer_question', 'forum_answers', ['question_id'], unique=False)
    op.create_index('idx_forum_answer_specialist', 'forum_answers', ['specialist_id'], unique=False)
    op.create_index('idx_forum_answer_status', 'forum_answers', ['status'], unique=False)
    op.create_index(op.f('ix_forum_answers_question_id'), 'forum_answers', ['question_id'], unique=False)
    op.create_index(op.f('ix_forum_answers_specialist_id'), 'forum_answers', ['specialist_id'], unique=False)
    op.create_index(op.f('ix_forum_answers_status'), 'forum_answers', ['status'], unique=False)
    op.create_table('specialist_documents',
    sa.Column('approval_data_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.Enum('DEGREE', 'LICENSE', 'CERTIFICATION', 'IDENTITY_CARD', 'EXPERIENCE_LETTER', 'OTHER', name='documenttypeenum'), nullable=False),
    sa.Column('document_name', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('verification_status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'NEEDS_RESUBMISSION', name='documentstatusenum'), nullable=False),
    sa.Column('verified_by', sa.UUID(), nullable=True),
    sa.Column('verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('upload_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('expiry_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by', sa.String(length=100), nullable=True),
    sa.Column('updated_by', sa.String(length=100), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.CheckConstraint('file_size > 0', name='chk_documents_file_size_positive'),
    sa.ForeignKeyConstraint(['approval_data_id'], ['specialists_approval_data.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_type_status', 'specialist_documents', ['document_type', 'verification_status'], unique=False)
    op.create_index('idx_documents_upload_date', 'specialist_documents', ['upload_date'], unique=False)
    op.create_index(op.f('ix_specialist_documents_document_type'), 'specialist_documents', ['document_type'], unique=False)
    op.create_index(op.f('ix_specialist_documents_verification_status'), 'specialist_documents', ['verification_status'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_specialist_documents_verification_status'), table_name='specialist_documents')
    op.drop_index(op.f('ix_specialist_documents_document_type'), table_name='specialist_documents')
    op.drop_index('idx_documents_upload_date', table_name='specialist_documents')
    op.drop_index('idx_documents_type_status', table_name='specialist_documents')
    op.drop_table('specialist_documents')
    op.drop_index(op.f('ix_forum_answers_status'), table_name='forum_answers')
    op.drop_index(op.f('ix_forum_answers_specialist_id'), table_name='forum_answers')
    op.drop_index(op.f('ix_forum_answers_question_id'), table_name='forum_answers')
    op.drop_index('idx_forum_answer_status', table_name='forum_answers')
    op.drop_index('idx_forum_answer_specialist', table_name='forum_answers')
    op.drop_index('idx_forum_answer_question', table_name='forum_answers')
    op.drop_index('idx_forum_answer_helpful', table_name='forum_answers')
    op.drop_index('idx_forum_answer_created', table_name='forum_answers')
    op.drop_table('forum_answers')
    op.drop_index(op.f('ix_specialists_auth_info_email_verification_status'), table_name='specialists_auth_info')
    op.drop_index('idx_specialist_auth_last_login', table_name='specialists_auth_info')
    op.drop_index('idx_auth_verification_status', table_name='specialists_auth_info')
    op.drop_table('specialists_auth_info')
    op.drop_index(op.f('ix_specialists_approval_data_license_number'), table_name='specialists_approval_data')
    op.drop_index('idx_approval_submission', table_name='specialists_approval_data')
    op.drop_index('idx_approval_review_status', table_name='specialists_approval_data')
    op.drop_index('idx_approval_license', table_name='specialists_approval_data')
    op.drop_index('idx_approval_cnic', table_name='specialists_approval_data')
    op.drop_table('specialists_approval_data')
    op.drop_index('idx_specializations_type', table_name='specialist_specializations')
    op.drop_index('idx_specializations_specialist', table_name='specialist_specializations')
    op.drop_index('idx_specializations_primary', table_name='specialist_specializations')
    op.drop_table('specialist_specializations')
    op.drop_index('idx_risk_assessment_type', table_name='patient_risk_assessment')
    op.drop_index('idx_risk_assessment_timestamp', table_name='patient_risk_assessment')
    op.drop_index('idx_risk_assessment_patient', table_name='patient_risk_assessment')
    op.drop_index('idx_risk_assessment_level', table_name='patient_risk_assessment')
    op.drop_index('idx_risk_assessment_current', table_name='patient_risk_assessment')
    op.drop_index('idx_risk_assessment_attention', table_name='patient_risk_assessment')
    op.drop_table('patient_risk_assessment')
    op.drop_index('idx_presenting_concerns_timestamp', table_name='patient_presenting_concerns')
    op.drop_index('idx_presenting_concerns_priority', table_name='patient_presenting_concerns')
    op.drop_index('idx_presenting_concerns_patient', table_name='patient_presenting_concerns')
    op.drop_index('idx_presenting_concerns_complete', table_name='patient_presenting_concerns')
    op.drop_index('idx_presenting_concerns_active', table_name='patient_presenting_concerns')
    op.drop_table('patient_presenting_concerns')
    op.drop_index('idx_patient_preferences_urgency', table_name='patient_preferences')
    op.drop_index('idx_patient_preferences_patient', table_name='patient_preferences')
    op.drop_index('idx_patient_preferences_mode', table_name='patient_preferences')
    op.drop_index('idx_patient_preferences_city', table_name='patient_preferences')
    op.drop_index('idx_patient_preferences_budget', table_name='patient_preferences')
    op.drop_index('idx_patient_preferences_active', table_name='patient_preferences')
    op.drop_table('patient_preferences')
    op.drop_index('idx_patient_history_timestamp', table_name='patient_history')
    op.drop_index('idx_patient_history_patient', table_name='patient_history')
    op.drop_index('idx_patient_history_complete', table_name='patient_history')
    op.drop_table('patient_history')
    op.drop_index('idx_auth_patient', table_name='patient_auth_info')
    op.drop_index('idx_auth_google', table_name='patient_auth_info')
    op.drop_table('patient_auth_info')
    op.drop_index(op.f('ix_optional_questionnaires_patient_id'), table_name='optional_questionnaires')
    op.drop_index('idx_optional_q_submitted_at', table_name='optional_questionnaires')
    op.drop_index('idx_optional_q_patient', table_name='optional_questionnaires')
    op.drop_table('optional_questionnaires')
    op.drop_index(op.f('ix_mandatory_questionnaires_patient_id'), table_name='mandatory_questionnaires')
    op.drop_index('idx_mandatory_q_submitted_at', table_name='mandatory_questionnaires')
    op.drop_index('idx_mandatory_q_patient', table_name='mandatory_questionnaires')
    op.drop_table('mandatory_questionnaires')
    op.drop_index(op.f('ix_forum_questions_status'), table_name='forum_questions')
    op.drop_index(op.f('ix_forum_questions_patient_id'), table_name='forum_questions')
    op.drop_index(op.f('ix_forum_questions_forum_id'), table_name='forum_questions')
    op.drop_index(op.f('ix_forum_questions_category'), table_name='forum_questions')
    op.drop_index('idx_forum_question_status', table_name='forum_questions')
    op.drop_index('idx_forum_question_patient', table_name='forum_questions')
    op.drop_index('idx_forum_question_forum', table_name='forum_questions')
    op.drop_index('idx_forum_question_created', table_name='forum_questions')
    op.drop_index('idx_forum_question_category', table_name='forum_questions')
    op.drop_index('idx_forum_question_answered', table_name='forum_questions')
    op.drop_table('forum_questions')
    op.drop_index('idx_appointment_type', table_name='appointments')
    op.drop_index('idx_appointment_status', table_name='appointments')
    op.drop_index('idx_appointment_specialist', table_name='appointments')
    op.drop_index('idx_appointment_payment', table_name='appointments')
    op.drop_index('idx_appointment_patient', table_name='appointments')
    op.drop_index('idx_appointment_date', table_name='appointments')
    op.drop_table('appointments')
    op.drop_index(op.f('ix_specialists_specialist_type'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_last_name'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_first_name'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_email'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_city'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_availability_status'), table_name='specialists')
    op.drop_index(op.f('ix_specialists_approval_status'), table_name='specialists')
    op.drop_index('idx_specialists_status', table_name='specialists')
    op.drop_index('idx_specialists_rating', table_name='specialists')
    op.drop_index('idx_specialists_name', table_name='specialists')
    op.drop_index('idx_specialists_location', table_name='specialists')
    op.drop_table('specialists')
    op.drop_index(op.f('ix_patients_city'), table_name='patients')
    op.drop_index('idx_patient_user_type', table_name='patients')
    op.drop_index('idx_patient_therapist', table_name='patients')
    op.drop_index('idx_patient_status', table_name='patients')
    op.drop_index('idx_patient_phone', table_name='patients')
    op.drop_index('idx_patient_name', table_name='patients')
    op.drop_index('idx_patient_email', table_name='patients')
    op.drop_index('idx_patient_dob', table_name='patients')
    op.drop_index('idx_patient_deleted', table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_forums_name'), table_name='forums')
    op.drop_index(op.f('ix_forums_is_active'), table_name='forums')
    op.drop_index(op.f('ix_forums_category'), table_name='forums')
    op.drop_index('idx_forum_name', table_name='forums')
    op.drop_index('idx_forum_category', table_name='forums')
    op.drop_index('idx_forum_active', table_name='forums')
    op.drop_table('forums')
    op.drop_index('idx_admin_status', table_name='admins')
    op.drop_index('idx_admin_role', table_name='admins')
    op.drop_index('idx_admin_email', table_name='admins')
    op.drop_index('idx_admin_active', table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
